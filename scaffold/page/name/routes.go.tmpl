package [# .Name #]

import (
	"github.com/rur/treetop"
	"[# .Namespace #]/page"
)

func Routes(hlp page.Helper, exec treetop.ViewExecutor) {
	[# block "routes" . #]
	// Code generated by go generate; DO NOT EDIT.

	[# range $index, $entry := .Entries -#]
	[# if eq $entry.Type "PageView" -#]
	[# $entry.Assignment #] := treetop.NewView(
		"[# $entry.Template #]",
		[# $entry.Handler #],
	)
	[#- else if eq $entry.Type "DefaultSubView" -#]
	[# if $entry.Assignment #][# $entry.Assignment #] := [#end#][# $entry.Extends #].NewDefaultSubView(
		"[# $entry.Block #]",
		"[# $entry.Template #]",
		[# $entry.Handler #],
	)
	[#- else if eq $entry.Type "SubView" -#]
	[# if $entry.Assignment #][# $entry.Assignment #] := [#end#][# $entry.Extends #].NewSubView(
		"[# $entry.Block #]",
		"[# $entry.Template #]",
		[# $entry.Handler #],
	)
	[#- else if eq $entry.Type "HasSubView" -#]
	[# $entry.Extends #].HasSubView("[# $entry.Block #]")
	[#- else if eq $entry.Type "Spacer" #]
	// [# $entry.Comment #]
	[#- else -#]
	nil // error: unknown entry type "[# $entry.Type #]"
	[#- end #]
	[# end #][# range $index, $route := .Routes #]
	hlp.Handle[# $route.Method #]("[# $route.Path #]",
		[# if not $route.Includes #]exec.NewViewHandler([# $route.Reference #])
		[#- else #]exec.NewViewHandler(
			[# $route.Reference #],
			[# range $index, $include := $route.Includes #][# $include #],
		[#end#])
		[#- end #]
	[#- if $route.PageOnly #].PageOnly()[# end #]
	[#- if $route.FragmentOnly #].FragmentOnly()[# end #])
	[#- end #]

	[# end #]
}
