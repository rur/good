# Bootstrap v5 Login

Starter template for user login and registration UX. The demo uses an in-memory mock DB.

### Generated for page `[# .Name #]`

This page is based on the _Sign In_ template from the [Bootstrap v5 Examples](https://getbootstrap.com/docs/5.0/examples/) site.

### Running the server

_NB._ Keep in mind when testing locally, this page will use secure Cookies if the `env.HTTPS` flag is set.

#### Install Dependencies

To support user registration, we introduce two dependencies listed below, you may need to run `go tidy ./...`
to update your go.mod file.

- `golang.org/x/crypto/bcrypt` for password hashing
- `github.com/wagslane/go-password-validator` for password entropy check


## Demo User

Since all mock registrations will be reset between restarts, the mock login DB has one pre-populated user.
You can use these credentials to try out the GUI.

| email             | password         |
|-------------------|------------------|
|`demo@example.com` | `password123`    |


## Customization

Your requirements might be simpler or very different in some way. This section should help you to figure out
what code to keep and what to modify or get rid of.

### Mock Database

The __mock_logindb.go__ file has an in-memory implementation of the `loginDB` interface defined in the
__resources.go__ file.

#### Database Procedures


| Procedure              | Description
|------------------------|-----------------------------------------
| authenticateUser       | Load a user instance based on email + password
| registerUser           | Save a new user. Email must not conflict with an existing user
| createUserSession      | Given a user instance, store it and get back a pair of session keys (`session_key` & `refresh_key`)
| deleteUserSession      | Purge any user session records associated with a pair of keys
| getUserSession         | Redeem user info given a session key
| rememberUserSession    | Redeem user info given a session refresh key (remember me)

#### Page Files

Where you can find code and handlers in the starter

| Page File                    | Info
|------------------------------|-----------------------------------------
| **resources.go**             | setup DB for the handlers and attempt to load the user session for the current request
| **handlers.go**              | Base handler for the base HTML template
| **handlers_registration.go** | load registration form and handle `POST [...]/create`
| **handlers_signin.go**       | login form endpoint, handle `GET` and `POST`
| **handlers_signout.go**      | user logout handler
| **handlers_whoami.go**       | display current-user session status
| **mock_logindb.go**          | in-memory mock DB implementation for demonstration

Refer to the [Page Routemap Docs](../../docs/ROUTEMAP.md) for guidelines on understanding the
page endpoint configuration.
