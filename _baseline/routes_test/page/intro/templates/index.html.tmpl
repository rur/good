<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="" />
    <title>Good Start</title>
    <link rel="shortcut icon" href="/public/favicon.ico" />

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />

    <style>
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }
      .icon-list {
        padding-left: 0;
        list-style: none;
      }
      .icon-list li {
        display: flex;
        align-items: flex-start;
        margin-bottom: 0.25rem;
      }
      .icon-list li::before {
        display: block;
        flex-shrink: 0;
        width: 1.5em;
        height: 1.5em;
        margin-right: 0.5rem;
        content: "";
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23212529' viewBox='0 0 16 16'%3E%3Cpath d='M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z'/%3E%3C/svg%3E")
          no-repeat center center / 100% auto;
      }
    </style>
  </head>
  <body>
    <div class="col-lg-10 mx-auto p-3 py-md-5">
      <header class="d-flex align-items-center pb-3 mb-5 border-bottom">
        <a
          href="/"
          class="d-flex align-items-center text-dark text-decoration-none me-auto"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="32"
            height="23"
            class="bi bi-check-square"
            viewBox="0 0 16 16"
          >
            <path
              d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"
            />
            <path
              d="M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.235.235 0 0 1 .02-.022z"
            />
          </svg>

          <span class="fs-4">Good Start</span>
        </a>

        <code class="h5 m-0">github.com/rur/good/baseline/routes_test</code>
      </header>

      <main class="container">
        <div class="row">
          <div class="col-lg-4 pt-lg-5">
            <h1 class="mt-lg-4">Scaffold Overview</h1>
            <p class="fs-5 col-lg-8">
              The web app that's just another Go package
            </p>
          </div>
          <div class="col-lg-8 mb-3">
            {{ template "diagram" "" }}
          </div>
        </div>

        <hr class="col-3 col-md-5 mb-3 mx-auto" />

        <p class="p-4 display-6 text-center mx-auto col-lg-8 col-10">
          A few things to know before diving into the code...
        </p>

        <div class="row g-5">
          <div class="col-md-6 col-lg-4">
            <h3>Site</h3>
            <p>
              Code in the scaffold package <code>./baseline/routes_test</code> is yours
              to modify as you please. The other <em>Good</em> CLI commands can help you with pages and routing
              if you keep the general <strong>./page</strong> structure.
            </p>
            <h5>Read the code</h5>
            <p>
              The code is generally self documenting. After a quick read through,
              you should have a sense of where to modify things to suit your needs.
            </p>
            <p>
              Markdown guideline documents can be found in the
              <strong>./docs</strong> directory of your scaffold.
            </p>

            <h5>Code generation CLI overview:</h5>
            <ol>
              <li><code>good scaffold</code>: Create the initial setup</li>
              <li><code>good page</code>: Add a new page</li>
              <li><code>good routes gen</code>: Update routes for a page</li>
            </ol>
          </div>
          <div class="col-md-6 col-lg-4">
            <h3>Pages</h3>
            <p>
              Top-level sections are organized into pages, each with it's own
              routing config for page endpoints.
            </p>

            <p>
              Pages are independent by default; refactor to control redundancy
              as your site grows.
            </p>

            <h5>Resources:</h5>
            <ul>
              <li>
                A <code>site.Env</code> singleton is initialized during
                startup and passed to handlers.
              </li>
              <li>
                Each page has a private <code>resources{}</code> struct for
                request-scoped data.
              </li>
              <li>
                The <code>[site]/page</code> package is the destination for
                shared templates and request helpers.
              </li>
            </ul>
            <p>
              Dependencies are passed to handlers using straightforward,
              type-safe function closures.
            </p>
          </div>
          <div class="col-md-8 mx-auto col-lg-4">
            <h3>Routes</h3>
            <p>
              Routing is configured with a TOML file in each page directory.
            </p>

            <h5>Route Map</h5>
            <p>
              The <code>routemap.toml</code> config file outlines the layout
              hierarchy for a page and map: paths, templates and handlers to
              HTTP endpoints.
            </p>
            <p>
              The <code>page/*/routes.go</code> files are generated with the
              plumbing code for page endpoints. This must be updated when the
              route map changes
            </p>
            <p>
              <strong>gen.go</strong> files appear in the appropriate places so
              that a recursive generate command will take care of code-gen tasks.
            </p>
            <pre class="bg-light p-3"><code>$ go generate ./baseline/routes_test/...</code></pre>

          </div>

          <hr class="col-3 col-md-5 mb-3 mx-auto" />

          <div class="row mt-5">
            <div class="col col-md-6 px-4 mb-5">
              <h4 class="mb-3"><strong>ðŸ“ˆ next step,</strong> add a page</h4>

              <pre class="bg-light p-3"><code>$ good page ./baseline/routes_test mydemo \
    --starter :bootstrap5/examples</code>
<code>$ go generate ./baseline/routes_test/...</code>
<code>$ go run ./baseline/routes_test --dev --port 8000</code></pre>

              <p>Then visit <code>http://localhost:8000/mydemo</code></p>
              <p>
                This command will create a page using the built-in
                <em>bootstrap5</em> starter layout. This includes example
                functionality to show how to get things done. Choose a
                page name with lowercase alpha characters only.
              </p>

              <h5 class="mt-4">Other layout starter options</h5>
              <p>
                You can try one of these other built-in starter options, if you
                wish:
              </p>
              <table class="table">
                <tr><td><code>:basic               </code> </td><td>No layout, just a simple page scaffold (default)</td></tr>
                <tr><td><code>:bootstrap5/layout   </code> </td><td>Useful Bootsrap v5.0 web console layout</td></tr>
                <tr><td><code>:bootstrap5/examples </code> </td><td>Working demos with the Bootsrap v5.0 layout and components</td></tr>
                <tr><td><code>:bootstrap5/login    </code> </td><td>Working user login and registration flow an in-mem mock dB</td></tr>
                <tr><td><code>:bootstrap5/datatable</code> </td><td><em>TODO!</em></td></tr>
                <tr><td><code>:minimum             </code> </td><td>Most bare bones option</td></tr>
                <tr><td><code>:intro               </code> </td><td>Introduction page to the good scaffold</td></tr>
              </table>
            </div>
            <div class="col col-md-6 px-4">
              <h4 class="mb-3"><strong>ðŸ’¡ tip,</strong> delete this page</h4>
              <p>
                This is the default home page created by the scaffold command.
                At some point, you'll want to delete it and use your own landing
                page. The following command will delete this page and update the
                scaffold...
              </p>
              <pre
                class="mt-2 b-5 bg-light p-4 mx-auto"
                style="max-width: 750px"
              ><code>$ good pages delete ./baseline/routes_test/page/intro</code></pre
              >
              <p>
                Use the <code>-h</code> CLI flag for more details on commands &
                options.
              </p>
            </div>
          </div>
        </div>
      </main>
      <footer class="pt-5 my-5 text-muted border-top">
        Generated by the
        <a href="https://github.com/rur/good" target="_blank">Good Scaffold</a>
        created by
        <a href="https://github.com/rur" target="_blank">Ruaidhri Devery</a>
        &middot; &copy; 2021
      </footer>
    </div>
  </body>
</html>
